import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class ProjectDriver {
   static Scanner scanner = new Scanner(System.in);
    public static void main(String[] args) {
        boolean exit = false;
        while (!exit) {
            System.out.println("-------------------");
            System.out.println("Main Menu");
            System.out.println("1 : Student Management");
            System.out.println("2 : Course Management");
            System.out.println("0 : Exit");
            System.out.print("Enter your selection: ");
            int choice = scanner.nextInt();
            switch (choice) {
                case 1:
                    studentManagementMenu();
                    break;
                case 2:
                    courseManagementMenu();
                    break;
                case 0:
                    exit = true;
                    break;
            }
        }
    }

    public static void studentManagementMenu() {
	boolean exit = false;
        while (!exit) {
            System.out.println("-------------------");
            System.out.println("Student Management Menu:");
            System.out.println("A - Search add a student");
            System.out.println("B - Delete a Student");
            System.out.println("C - Print Fee Invoice");
            System.out.println("D - Print List of Students");
            System.out.println("X - Back to main menu");
            System.out.print("Enter your selection: ");
            String option = scanner.next().toUpperCase();

            switch (option) {
                case "A":
			System.out.print("Enter Studentâ€™s ID");
                	String id = scanner.next();
                	//need to check id for duplicates/invalid format using exception class called IdException
                	System.out.print("Student Type (PhD, MS or Undergrad): ");
                	String stdType = scanner.next();
                	System.out.println("Enter Remaining information");
                	String info = scanner.next();
                    break;
                case "B":
                    break;
                case "C":
                    break;
                case "D":
                    break;
                case "X":
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    public static void courseManagementMenu() {
        boolean exit = false;
        while (!exit) {
            System.out.println("-------------------");
            System.out.println("Course Management Menu:");
            System.out.println("A - Search for a course or lab using the CRN");
            System.out.println("B - Delete a course or lab");
            System.out.println("C - Add a lab to a course");
            System.out.println("X - Back to main menu");
            System.out.print("Enter your selection: ");
            String option = scanner.next().toUpperCase();

		switch (option) {
                case "A":
                    break;
                case "B":
                    break;
                case "C":
                    break;
                case "X":
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}



abstract class Student{
    String Name;
    String id;

    public abstract void printInvoice();
    public void saveData(){

    }

}

//UndergraduateStudent Class
class UndergraduateStudent extends Student{

    public void printInvoice(){

    }

    public void setUndergradName(String Name){
        this.Name = Name;
    }

    public String getUndergradName(){
        return Name;
    }

    public void setUndergradId(String id){
        this.id = id;
    }

    public String getUndergradId(){
        return id;
    }

}


//abstract Graduate class
abstract class GraduateStudent extends Student{
    
}




//pHD student class ext. grad
class PhdStudent extends GraduateStudent{

    public void printInvoice(){
        
    }

    public void setPhdName(String Name){
        this.Name = Name;
    }

    public String getPhdName(){
        return Name;
    }

    public void setPhdId(String id){
        this.id = id;
    }

    public String getPhdId(){
        return id;
    }
}



//MsStudent ext. Grad
class MsStudent extends GraduateStudent{
    public void printInvoice(){
        
    }

    public void setGradName(String Name){
        this.Name = Name;
    }

    public String getGradName(){
        return Name;
    }

    public void setGradId(String id){
        this.id = id;
    }

    public String getGradId(){
        return id;
    
}

class IdException extends Exception {
	public IdException (){
		
	}
}

}



